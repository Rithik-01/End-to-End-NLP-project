version: 2.1

jobs:
  continuous-integration:
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Debug - Check environment
          command: |
            echo "Checking environment..."
            pwd
            ls -la
            echo "Docker version:"
            docker --version
            echo "Environment variables:"
            env | grep -E "(CIRCLE|GCLOUD)" || echo "No CircleCI/GCloud vars found"
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install and setup gcloud
          command: |
            curl https://sdk.cloud.google.com > install.sh
            bash install.sh --disable-prompts
            export PATH=$HOME/google-cloud-sdk/bin:$PATH
            echo 'export PATH=$HOME/google-cloud-sdk/bin:$PATH' >> $BASH_ENV
            echo "$GCLOUD_SERVICE_KEY" > ${HOME}/gcloud-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-key.json
            gcloud config set project steady-burner-468814-b4
      - run:
          name: Configure Docker for GCR
          command: gcloud auth configure-docker us-central1-docker.pkg.dev
      - run:
          name: Build and Push Docker Image
          command: |
            IMAGE_NAME=us-central1-docker.pkg.dev/steady-burner-468814-b4/my-nlp-app/my-nlp-image:latest
            docker build -t $IMAGE_NAME .
            docker push $IMAGE_NAME

  continuous-delivery:
    machine: true
    steps:
      - checkout
      - run:
          name: Setup SSH key
          command: |
            mkdir -p ~/.ssh
            echo "$SSH_PRIVATE_KEY" > ~/.ssh/circleci-gce
            chmod 600 ~/.ssh/circleci-gce
      - run:
          name: SSH into GCE VM and deploy
          command: |
            IMAGE_NAME=us-central1-docker.pkg.dev/steady-burner-468814-b4/my-nlp-app/my-nlp-image:latest
            ssh -o StrictHostKeyChecking=no -i ~/.ssh/circleci-gce hateclassifyproject@34.63.254.156 \
              "docker pull $IMAGE_NAME && docker stop my-nlp-app || true && docker rm my-nlp-app || true && docker run -d --name my-nlp-app -p 8080:8080 $IMAGE_NAME"

workflows:
  CICD:
    jobs:
      - continuous-integration
      - continuous-delivery:
          requires:
            - continuous-integration